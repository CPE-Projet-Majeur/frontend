worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # resolver 127.0.0.11 valid=10s; # Utilise le DNS interne de Docker
    # Define a localserver listening on 80 port
    server {
        # Define the port where the local server listen
        listen 80;
        
        root /usr/share/nginx/html;
        index index.html;

        location /users {
            proxy_pass http://host.docker.internal:8083;
        }

        location /login {
            proxy_pass http://host.docker.internal:8083;
        }

        location /admin {
            proxy_pass http://host.docker.internal:8083;
        }


        # Define a rule for the route /my-api2
        # Here all requests to /my-api2 are redirected to http://192.168.10.40:8888
        # The URL is rewritten before being sent to the new server
        # e.g if the request "/my-api2/vehicle/45" is received by Nginx
        # the request is rewritten in "/vehicle/45" ("/my-api2" is removed) before being sent to the server http://192.168.10.40:8888
        location /spells {
            proxy_pass http://host.docker.internal:8084;
        }

         # Proxy pour la socket batte service
        location /socket.io {
            proxy_pass http://host.docker.internal:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Define a rule for the route /
        # Here all requests to / are redirected http://192.168.10.100:4000;
        # In General this kind of rules is used for calling front resources
        location / {
            try_files $uri /index.html;
        }
        
    }
}